locals {
  cwd        = split("/", path.cwd)
  testengine = element(local.cwd, length(local.cwd) - 2)
  testcase   = basename(abspath(path.cwd))
  gcp_site = {
    "metadata": {
      "name": format("%s-%s", var.project_prefix, "gcp-site1"),
      "description": format("generated by %s", local.testengine),
      "disable": false
    },
    "spec": {
      "gcp_region": var.gcp_region,
      "ingress_gw": {
        "gcp_certified_hw": "gcp-byol-voltmesh",
        "gcp_zone_names": [
          format("%s-a", var.gcp_region)
        ],
        "node_number": 1,
        "local_network": {
          "existing_network": {
            "name": var.gcp_interconnect_vpc
          }
        },
        "local_subnet": {
          "existing_subnet": {
            "subnet_name": var.gcp_interconnect_subnet
          }
        },
        "performance_enhancement_mode": {
          "perf_mode_l7_enhanced": {}
        }
      },
      "cloud_credentials": {
        "namespace": "system",
        "name": var.f5xc_gcp_cred,
        "kind": "cloud_credentials"
      },
      "instance_type": "n1-standard-4",
      "disk_size": 0,
      "ssh_key": var.ssh_public_key,
      "coordinates": {
        "latitude": 0,
        "longitude": 0
      },
      "logs_streaming_disabled": {},
      "sw": {
        "default_sw_version": {}
      },
      "os": {
        "default_os_version": {}
      },
      "gcp_labels": {},
      "offline_survivability_mode": {
        "no_offline_survivability_mode": {}
      },
      "default_blocked_services": {},
      "private_connectivity": {
      "cloud_link": {
        "namespace": "system",
        "name": "mw-test-gcp-interconnect-1",
        "kind": "cloud_link"
      },
      "outside": {}
    }
      #  "private_connect_disabled": {}
    }
  }
}

resource "restapi_object" "gcp_site" {
  id_attribute = "metadata/name"
  path         = "/config/namespaces/system/gcp_vpc_sites"
  data         = jsonencode(local.gcp_site)
}

resource "volterra_tf_params_action" "gcp_vpc_action" {
  action          = "apply"
  site_name       = format("%s-%s", var.project_prefix, "gcp-site1")
  site_kind       = "gcp_vpc_site"
  wait_for_action = true
}

module "site_wait_for_online" {
  depends_on     = [volterra_tf_params_action.gcp_vpc_action]
  source         = "../modules/f5xc/status/site"
  f5xc_api_token = var.f5xc_api_token
  f5xc_api_url   = var.f5xc_api_url
  f5xc_namespace = "system"
  f5xc_site_name = format("%s-%s", var.project_prefix, "gcp-site1")
  f5xc_tenant    = var.f5xc_tenant
  is_sensitive   = false
}

output "gcp-site" {
  value = restapi_object.gcp_site[*]
}

